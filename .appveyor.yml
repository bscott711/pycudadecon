environment:

  # Workaround for https://github.com/conda/conda-build/issues/636
  PYTHONIOENCODING: "UTF-8"

  LABEL: 'main'
  BRANCH: 'master'

  matrix:
    # Note: Because we have to separate the py2 and py3 components due to compiler version, we have a race condition for non-python packages.
    # Not sure how to resolve this, but maybe we should be tracking the VS version in the build string anyway?
    - TARGET_ARCH: "x64"
      CONDA_PY: "36"
      CONDA_INSTALL_LOCN: "C:\\Miniconda36-x64"
    - TARGET_ARCH: "x64"
      CONDA_PY: "37"
      CONDA_INSTALL_LOCN: "C:\\Miniconda37-x64"
    - TARGET_ARCH: "x64"
      CONDA_PY: "39"
      CONDA_INSTALL_LOCN: "C:\\Miniconda39-x64"

artifacts:
    # Store built conda packages as artifacts
    - path: 'conda_packages\*.bz2'

# We always use a 64-bit machine, but can build x86 distributions
# with the TARGET_ARCH variable (which is used by CMD_IN_ENV).
platform:
    - x64


branches:
  only:
    - master


install:
    # If there is a newer build queued for the same PR, cancel this one.
    - cmd: |
        powershell -Command "(New-Object Net.WebClient).DownloadFile('https://raw.githubusercontent.com/conda-forge/conda-forge-build-setup-feedstock/master/recipe/ff_ci_pr_build.py', 'ff_ci_pr_build.py')"
        ff_ci_pr_build -v --ci "appveyor" "%APPVEYOR_ACCOUNT_NAME%/%APPVEYOR_PROJECT_SLUG%" "%APPVEYOR_BUILD_NUMBER%" "%APPVEYOR_PULL_REQUEST_NUMBER%"
        del ff_ci_pr_build.py

    # Remove cygwin (and therefore the git that comes with it).
    - cmd: rmdir C:\cygwin /s /q

    # Use the pre-installed Miniconda for the desired arch
    - cmd: call %CONDA_INSTALL_LOCN%\Scripts\activate.bat
    - cmd: conda config --add channels conda-forge
    - cmd: conda config --add channels talley
    - cmd: conda config --set show_channel_urls true
    - cmd: appveyor-retry conda install --yes --quiet conda
    - cmd: appveyor-retry conda install --yes --quiet -c defaults anaconda-client
    - cmd: appveyor-retry conda install --yes --quiet -c defaults conda-build
    - cmd: conda build --version

# Skip .NET project specific build phase.
build: off

test_script:
    - cmd: conda build conda.recipe --py %CONDA_PY% --output >outname.txt
    #- cmd: set /p OUTNAME=<outname.txt
    - cmd: conda build conda.recipe --py %CONDA_PY%
    # copy any newly created conda packages into the conda_packages dir
    - cmd: mkdir conda_packages
    # make any conda packages created available as build artifacts in AppVeyor
#   - cmd: 'copy /Y %CONDA_INSTALL_LOCN%\conda-bld\win-32\*.bz2 conda_packages || cmd /c "exit /b 0"'
    - cmd: 'copy /Y %CONDA_INSTALL_LOCN%\conda-bld\win-64\*.bz2 conda_packages || cmd /c "exit /b 0"'
    - cmd: anaconda -v -t %CONDA_UPLOAD_TOKEN% upload "%CONDA_INSTALL_LOCN%\conda-bld\win-64\*.tar.bz2" -u talley --force --label %LABEL%
